function run_cris_ADL_sdr_hr_clear_day_batch(cfg)

addpath ..;  % look one level up for create_* functions

% grab the slurm array index for this process
slurmindex = str2num(getenv('SLURM_ARRAY_TASK_ID'));
if isempty(slurmindex)
    slurmindex=1;
end

chunk = cfg.chunk;
for i = 1:chunk
    dayindex = (slurmindex*chunk) + i;
    fprintf(1, '> chunk %d  dayindex %d\n', i, dayindex);
    
    % File ~/cris-files-process.txt is a list of filepaths to the input
    % files or this processing. For the initial runs, this was
    % generated by a call to 'ls' while sitting in the directory
    % /asl/data/cris/ccast/sdr60_hr/2015: 
    %    ls -d1 $PWD/{048,049,050}/*.mat >> ~/cris-files-process.txt
    %
    % cris-files-process.txt, then, contains lines like:
    %    /asl/data/cris/ccast/sdr60_hr/2015/048/SDR_d20150217_t1126169.mat
    [status, srcpath] = system(sprintf('sed -n "%dp" %s | tr -d "\n"', ...
                                      dayindex, cfg.file_list));

    if strcmp(srcpath, '')
        error('** No entry for index=%d found in file list %s\n', ...
              dayindex, cfg.file_list)
    end

    % get list of granule files contained in day directory srcpath
    granules = dir(sprintf('%s/SCRIF*.h5', srcpath));
    if isempty(granules)
        error('** No SCRIF granule files found in %s. Exiting.\n', ...
                srcpath);
    end
    
    % granules were found, loop over them and process
    head=[];
    hattr={};
    prof=[];
    pattr={};
    firstcleargran=true;
    ngranules = length(granules);
    for i=1:ngranules
        fprintf(1, '>> processing granule %d/%d\n',i,ngranules)
        % build path to individual granule files
        granfile = fullfile(granules(i).folder,granules(i).name);

        % call the processing function
        [h0, ha0, p0, pa0] = create_cris_ADL_sdr_hires_clear_gran_rtp(granfile, cfg);
        if isempty(p0)
            fprintf(2, '>>> No clear obs found in granule %d.\n', i);
            continue
        end

        % If clear obs were found, concatenate into master rtp
        % structs
        if firstcleargran
            head=h0;
            hattr=ha0;
            prof=p0;
            pattr=pa0;
            firstcleargran=false;
        else
            prof = rtp_cat_prof(prof, p0);
        end

    end

    % granule filenames look like
    % SCRIF_npp_d20210521_t1459199_e1459497_b49560_c20210524162007037970_ADu_ops.h5
    % extract d20210521 to get datetime parts for output path
    % construction. output paths look like
    % cfg.outputdir/clear/year/cris_ADL_ecmwf_csarta_clear_d20210521.rtp

    [gpath, gname, ext] = fileparts(granfile);
    C = strsplit(gname, '_');
    tstamp = C{3};
    year = tstamp(2:5);
    
    % Make directory if needed
    % cris hires data will be stored in
    % /asl/rtp/rtp_cris_ccast_hires/{clear,dcc,site,random}/<year>/<doy>
    %
    asType = 'clear'
    % check for existence of output path and create it if necessary. This may become a source
    % for filesystem collisions once we are running under slurm.
    sPath = fullfile(cfg.outputdir,asType,year);
    if exist(sPath) == 0
        mkdir(sPath);
    end
    
    % Now save the four types of cris files
    fprintf(1, '> writing output rtp file... ');
    C = strsplit(gname, '_');
    % output naming convention:
    % <inst>_<model>_<rta>_<filter>_<date>_<time>.rtp
    fname = sprintf('%s_sdr_%s_%s_%s_%s.rtp', cfg.inst,...
                    cfg.model_cfg.model, cfg.rta_cfg.rta, asType, ...
                    tstamp);
    rtp_outname = fullfile(sPath, fname);
    fprintf(1, '>> Writing output to file: %s\n', rtp_outname);
    rtpwrite(rtp_outname,head,hattr,prof,pattr);
    fprintf(1, 'Done\n');

end    
